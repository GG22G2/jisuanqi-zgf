(function(){"use strict";self.onmessage=w=>{let i=w.data;A.setBaseData(i.data);let e=A.call(i.start,i.limit);self.postMessage({type:"r",result:e})};class G{constructor(){this.playRecipes=null,this.start=0,this.groupRecipeIndex=null,this.groupMaxScore=null,this.groupMaxScoreChefIndex=null}setBaseData({playRecipes2:i,recipePL:e,scoreCache:M,recipeCount:f,chefCount:p}){this.playRecipes=i,this.recipePL=e;let c=this.calAllCache(M,f,p);this.groupMaxScore=c.groupMaxScore,this.groupMaxScoreChefIndex=c.groupMaxScoreChefIndex,this.groupRecipeIndex=c.groupRecipeIndex}call(i,e){let M=Date.now(),f=0,p=0,c,x,a,o={maxScore:0,maxScoreChefGroup:new Array(3),recipes:null,permuation:null};const r=this.playRecipes,g=Math.sqrt(this.groupRecipeIndex.length);for(let u=i;u<e;u++){const t=u*9;for(let S=0;S<1680;S++){const s=this.recipePL[S];c=this.groupRecipeIndex[r[t+s[0]]*g+r[t+s[1]]]+(r[t+s[2]]-r[t+s[1]]-1),x=this.groupRecipeIndex[r[t+s[3]]*g+r[t+s[4]]]+(r[t+s[5]]-r[t+s[4]]-1),a=this.groupRecipeIndex[r[t+s[6]]*g+r[t+s[7]]]+(r[t+s[8]]-r[t+s[7]]-1),c=c*3,x=x*3,a=a*3;let d=this.groupMaxScore[c]+this.groupMaxScore[x]+this.groupMaxScore[a];if(d>p){let l=this.groupMaxScoreChefIndex[c],n=this.groupMaxScoreChefIndex[x],I=this.groupMaxScoreChefIndex[a];if(l!==n&&l!==I&&n!==I)p=d,o.maxScore=p,o.maxScoreChefGroup=[l,n,I],o.recipes=r.slice(t,t+9),o.permuation=s;else for(let m=0;m<3;m++)for(let R=0;R<3;R++)for(let y=0;y<3;y++)d=this.groupMaxScore[c+m]+this.groupMaxScore[x+R]+this.groupMaxScore[a+y],l=this.groupMaxScoreChefIndex[c+m],n=this.groupMaxScoreChefIndex[x+R],I=this.groupMaxScoreChefIndex[a+y],d>p&&l!==n&&l!==I&&n!==I&&(p=d,o.maxScore=p,o.maxScoreChefGroup=[l,n,I],o.recipes=r.slice(t,t+9),o.permuation=s)}}}return f=Date.now(),console.info(e-i+"组数据计算用时:"+(f-M)+"ms"),o}calAllCache(i,e,M){let f=0;for(let h=0;h<e;h++)for(let o=h+1;o<e;o++)for(let r=o+1;r<e;r++)f++;console.log(`菜谱组合 ${f}`);const p=new Int32Array(e*e),c=new Int32Array(f*3),x=new Int32Array(f*3);console.time("计算菜谱组合最高3个得分");let a=0;for(let h=0;h<e;h++){for(let o=h+1;o<e;o++){p[h*e+o]=a/3;for(let r=o+1;r<e;r++){let g=0,u=0,t=0,S=0,s=0,d=0;for(let l=0;l<M;l++){let n=0;i[l*e+h]===0||i[l*e+o]===0||i[l*e+r]===0||(n=i[l*e+h]+i[l*e+o]+i[l*e+r]),n>g?(t=u,d=s,u=g,s=S,g=n,S=l):n>u?(t=u,d=s,u=n,s=l):n>t&&(t=n,d=l)}x[a]=S,x[a+1]=s,x[a+2]=d,c[a]=g,c[a+1]=u,c[a+2]=t,a=a+3}}postMessage({type:"p",p:a/(f*3)})}return console.timeEnd("计算菜谱组合最高3个得分"),{groupRecipeIndex:p,groupMaxScore:c,groupMaxScoreChefIndex:x}}}let A=new G})();
